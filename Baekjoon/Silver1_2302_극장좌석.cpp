/*
문제
	어떤 극장의 좌석은 한 줄로 되어 있으며 왼쪽부터 차례대로 1번부터 N번까지 번호가 매겨져 있다.
	공연을 보러 온 사람들은 자기의 입장권에 표시되어 있는 좌석에 앉아야 한다.

	예를 들어서, 입장권에 5번이 쓰여 있으면 5번 좌석에 앉아야 한다.
	단, 자기의 바로 왼쪽 좌석 또는 바로 오른쪽 좌석으로는 자리를 옮길 수 있다.

	예를 들어서, 7번 입장권을 가진 사람은 7번 좌석은 물론이고, 6번 좌석이나 8번 좌석에도 앉을 수 있다.
	그러나 5번 좌석이나 9번 좌석에는 앉을 수 없다.

	그런데 이 극장에는 “VIP 회원”들이 있다.
	이 사람들은 반드시 자기 좌석에만 앉아야 하며 옆 좌석으로 자리를 옮길 수 없다.

	오늘 공연은 입장권이 매진되어 1번 좌석부터 N번 좌석까지 모든 좌석이 다 팔렸다.
	VIP 회원들의 좌석 번호들이 주어졌을 때, 사람들이 좌석에 앉는 서로 다른 방법의 가짓수를 구하는 프로그램을 작성하시오.

입력
	첫째 줄에는 좌석의 개수 N이 입력된다. N은 1 이상 40 이하이다.
	둘째 줄에는 고정석의 개수 M이 입력된다. M은 0 이상 N 이하이다.
	다음 M 개의 줄에는 고정석의 번호가 작은 수부터 큰 수의 순서로 한 줄에 하나씩 입력된다.

출력
	주어진 조건을 만족하면서 사람들이 좌석에 앉을 수 있는 방법의 가짓수를 출력한다.
	방법의 가짓수는 2,000,000,000을 넘지 않는다. (2,000,000,000 < 2^31-1)

*/

/*

즉, 일반 관객은 자기 번호 ±1로 이동 가능
	VIP는	자기 번호만 가능하므로, 해당 번호는 일반 관객이 못 앉음.

*/


#include <iostream>
#include <vector>

using namespace std;

int main()
{
	int N, M;
	vector<int> vipSeats;
	int fibo[41] = { 1, 1, };
	int results = 1;

	cin >> N >> M;
	vipSeats.resize(M + 1);

	for (int i = 2; i <= 40; ++i)
		fibo[i] = fibo[i - 1] + fibo[i - 2];

	vipSeats[0] = 0;
	for (int i = 1; i <= M; ++i)
	{
		cin >> vipSeats[i];
		results *= fibo[vipSeats[i] - vipSeats[i - 1] - 1];
	}

	results *= fibo[N - vipSeats[M]];

	cout << results;

	return 0;
}